name: 品質チェック

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    # コミットメッセージに[skip ci]が含まれている場合はスキップ
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    
    # テスト用にSQLite in-memoryデータベースを使用
    # 外部サービスは不要
    
    strategy:
      fail-fast: false
    
    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v4
      
      - name: PHPセットアップ
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, sqlite3, pdo_sqlite
          coverage: xdebug
          ini-values: memory_limit=512M
      
      - name: Node.jsセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Composer依存関係をキャッシュ
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      
      - name: PHP依存関係をインストール
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: Node.js依存関係をインストール
        run: npm ci
      
      - name: 環境ファイルを作成
        run: |
          cp .env.ci .env
          php artisan key:generate --force
      
      - name: フロントエンドアセットをビルド
        run: npm run build
      
      - name: データベースを設定
        run: |
          php artisan config:cache
          php artisan migrate --force
      
      - name: PHPテストを実行（CI最適化版）
        run: |
          echo "=== PHP設定確認 ==="
          php -v
          php -i | grep memory_limit
          
          echo "=== 単純テスト実行 ==="
          php artisan test --stop-on-failure
      
      - name: コードスタイルチェックを実行
        run: vendor/bin/pint --test
      
      - name: 静的解析を実行
        run: vendor/bin/phpstan analyse --memory-limit=512M --no-progress
      
      - name: フロントエンドテストを実行
        run: npm test